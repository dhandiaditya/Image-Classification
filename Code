#import Important Library

from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import InteractiveSession

config = ConfigProto()
config.gpu_options.per_process_gpu_memory_fraction = 0.5
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)


from tensorflow.keras.layers import Input, Lambda, Dense, Flatten
from tensorflow.keras.models import Model
from tensorflow.keras.applications.inception_v3 import InceptionV3
from tensorflow.keras.applications.inception_v3 import preprocess_input
from tensorflow.keras.preprocessing import image
from tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img
from tensorflow.keras.models import Sequential
import numpy as np
from glob import glob




# re-size all the images to this
IMAGE_SIZE = [224, 224]

train_path = '/content/drive/MyDrive/Datasets/knee_project/train_1'
valid_path = '/content/drive/MyDrive/Datasets/knee_project/test_1'

#import inception model

inception = InceptionV3(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)




for layer in inception.layers:
    layer.trainable = False
    
    
folders = glob('/content/drive/MyDrive/Datasets/knee_project/train_1/*')

#flatten the layer
x = Flatten()(inception.output)

#define last dense layer and activation function

prediction = Dense(len(folders), activation='softmax')(x)

# create a model object
model = Model(inputs=inception.input, outputs=prediction)



model.summary()


#compile the model

model.compile(
  loss='categorical_crossentropy',
  optimizer='adam',
  metrics=['accuracy']
)


#augment the images

from tensorflow.keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)


#define training set 

training_set = train_datagen.flow_from_directory('/content/drive/MyDrive/Datasets/knee_project/train_1',
                                                 target_size = (224, 224),
                                                 batch_size = 32,
                                                 class_mode = 'categorical')
                                                 

#define test set
                                                 
test_set = test_datagen.flow_from_directory('/content/drive/MyDrive/Datasets/knee_project/test_1',
                                            target_size = (224, 224),
                                            batch_size = 32,
                                            class_mode = 'categorical')    
                                            
#create the model                                          
                                            
r = model.fit_generator(
  training_set,
  validation_data=test_set,
  epochs=1,
  steps_per_epoch=len(training_set),
  validation_steps=len(test_set)
)


#save the model

from tensorflow.keras.models import load_model

model.save('/content/drive/MyDrive/model_inception2.h5')

#test the model

img=image.load_img('/content/X-ray_of_normal_right_foot_by_lateral_projection.jpg',target_size=(224,224))

x=image.img_to_array(img)

import numpy as np
x=np.expand_dims(x,axis=0)
img_data=preprocess_input(x)
#img_data.shape

model.predict(img_data)
